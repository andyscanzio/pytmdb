name: Tests

on:
  - push
  - pull_request

jobs:
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install -e .
      - name: Run flake8
        run: flake8 .

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install mypy
        run: |
          python -m pip install --upgrade pip
          pip install mypy
          pip install pytest pytest-stub
          pip install -e .
      - name: Run mypy
        run: mypy .

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install coverage
        run: |
          python -m pip install --upgrade pip
          pip install coverage pytest
          pip install -e .
      - name: run tests
        run: coverage run -m pytest tests
      - name: check coverage
        run: coverage report --fail-under=100

  test:
    needs: [flake8, mypy, coverage]
    if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Test with tox
      run: tox

  collector:
    needs: [test]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: check for failures
      if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: echo job failed && exit 1